// ===================================================
// Fluid Type
// ===================================================

/// Generate the Sizes liste
///
/// @group core - fluidtype
///
/// @param   {list}  $screensize - [default:false] Min and Max Screensize
///                                on false it uses the biggest and the smallest size
///                                from the breakpoint Map
///
/// @return {list}  possible Screensizes
///
/// @access private
@function ftScreensize($screensize) {
  $sMin: null;
  $sMax: null;

  @if( $screensize != false ) {
    $sMin : strip-units(nth($screensize,1));
    $sMax : strip-units(nth($screensize,2));
  } @else {
    $sMin : strip-units(map-deep-get($kittn-breakpoint-map,map-first-index($kittn-breakpoint-map),size));
    $sMax : strip-units(map-deep-get($kittn-breakpoint-map,map-last-index($kittn-breakpoint-map),size));
  }

  $sizes: $sMin, $sMax;

  @return $sizes;
}

/// Make a Font Fluid
///
/// @group core - fluidtype
///
/// @param   {list}  $fontsize - Min and Max Fontsize in px
/// @param   {list}  $screensize - [default:false] Min and Max Screensize
///                                on false it uses the biggest and the smallest size
///                                from the breakpoint Map
///
/// @return {string}  a String for Calc
///
/// @require {function} ftScreensize
@function ft($fontsize, $screensize: false) {
  $fMin : strip-units(nth($fontsize,1));
  $fMax : strip-units(nth($fontsize,2));

  $sMin: nth(ftScreensize($screensize),1);
  $sMax: nth(ftScreensize($screensize),2);

  @return calc(#{$fMin + 0px} + (#{$fMax} - #{$fMin}) * (100vw - #{$sMin + 0px}) / (#{$sMax} - #{$sMin});
}


